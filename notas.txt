Traduccion de elementos No-Atomicos

Homogeneos ie. arreglos

id[limite inferior] [limite superior];

dir(id[s1, s2, .., sn]) = dir(id) + f(id, [s1 .. sn]) 


m0 = MULT(1, n, i){ di } = tamaÃ±o total del arreglo

m1 = MULT(2, n, i){ di }  = d2  * d3 * d4 * .. * dn

m2 = MULT(3, n) di = d3 * d4 * .. * dn

m(n-1) = dn

m(n) = 1


k = ?????? (normalmente es 0)
k = limite inferior (1) * m(n)
k = lim inf (1) * m1 + lim inf (2) * m2 + ... lim inf (n) mn 
k = lim inf (1) * (dim2...dim n) + lim inf (2) * dim(3..n)




f(id[s1,s2..sn]) = s1 * m1 + s2 * m2 + ... + s(n-1) * m(n-1) + Sn - K

ejemplo:

vector:
f(id[s1]) = s1 - k

matriz:

f(id[s1,s2]) = s2 * d2 + s1 - k

 int A[-3 .. 6]
 int i;
 int B[2..4, 0..3]                          m0 = d1 * d2 * .. * dn
 int j;                                     m1 = m0 / d1
 int C[0..2, -2..5, 4..8]                   m2 = m1 / d2
                                            ..

El numero de abajo de las casillas, son m(i) y el ultimo es K.
Se calculan MULT(2, n, i){ di }  = d2  * d3 * d4 * .. * dn. O tomas m0 y lo vas dividiendo.
Para encontrar indice, multiplicas numero de abajo por Si y lo sumas a un total.

                                                         +---------+---------+-----+
+-------------------------------------+                  |         |         |    X|
|                                     |                  |    6    |  -3     |   XX|
|Nombre   Tipo    dir     dim         |                  +---------+---------+  XX |
+-------+-------+-------+-------------+                  |                   |XX   |
|       |       |       |             |                  |      3            |X    |
| A     |  i    | 5000  |     +------------------------> +-------------------------+
|       |       |       |             |
|       |       |       |             |                     m1 = 10/10 = 1
|       |       |       |             |                     k= Lim Inf * m1 = -3
|       |       |       |        XXX  |
|  i    |  i    | 5010  |    XX X     |
|       |       |       | XX          |             +--------+-----------+-------+
|       |       |       |             |             |        |           |       |
|       |       |       |             |             |    4   |     2     |       |
|       |       |       |             |             |        |           |       |
|  B    |   i   | 5011  |   +---------------------> +--------+-----------+  +    |
|       |       |       |             |             |                    |  |    |
|       |       |       |             |             |         8          |  |    |
|       |       |       |             |             +--------------------+-------+
|       |       |       |             |                                     |
|       |       |       |             |                                     |
|       |       |       |             |                m1 = ?? = 4          |
|       |       |       |             |                                     |
|       |       |       |             |                sumaK = 0 + 2  * 4   |
|       |       |       |             |                (ir sumando para no tener que regresar)
|       |       |       |             |                                     |
|       |       |       |             |                                     |
|       |       |       |             |           +-------------------------+
|       |       |       |             |           |
|       |       |       |             |           |   +----------+---------+-------+
|       |       |       |             |           +-->+          |         |     XX|
|       |       |       |             |               |   3      |    0    |    XX |
|       |       |       |             |               |          |         |    X  |
|       |       |       |             |               |          |         |   XX  |
|       |       |       |             |               +----------+---------+ XXX   |
+-------+-------+-------+-------------+               |                    | X     |
                                                      |       -8           |XX     |
                                                      |                    |X      |
                                                      +----------------------------+
                                                         m2 = m1 / d2 = 4/4 = 1
                                                         sumaK = 8 + 0 * 1 = 8










IDEA:

class = named array

id.value === id["value"]
id.function() === id["function"]();


array{
	enum{
		_size : index;
		(fun) size : index 
		"name" : index = 3
		index name : index
	}
}



CLASSES TIENEN SU PROPIO SCOPE



var i = 1;


var t = 4.0
var f = i + t;
var f2 = t + i;



t{
	type: Boolean
	value: ??
	ref: 0x021313
	//end 0x021314
}
t{
	type: "Float" 
	value: 2
	ref: 0x021314
	//end 0x021316
}
s{
	type: string
	value: ??
	ref: 0x021313
	size: 30;
	//end ref + size;
}
s{
	type: function
	value: ??
	ref: 0x021313
	closure: x =2,  ref j = 4;
}

object{
	type: object
	value: "ClassID" -> lookup
	ref: 0x021313
}





